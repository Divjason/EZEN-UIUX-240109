- JavaScript 기본문법 복습!!!
- React.js 프로젝트 복습!!!
> 혼자서 아무것도 안보는 상황에서 코드를 작성x
> 6개월 시간 공부 x
> 수업시간 : 
1.혼자서 아무것도 안보고 어디까지
2.10분정도 > 검색 > Chat GPT
3.수업시간 보시면서 끝까지 다시 만들어보기
> 2~3시간

React.js
*지난주 부터 어제까지 작업 React 프로젝트의 공통점

*만약, 에뛰드하우스 클론코딩 => React
4인 1조 => 4개 페이지

수현 : 에뛰드 하우스 메인페이지
(*상품목록 리스트화)

특정상품 클릭 => 성진 : 상세페이지 

리액트 : 컴포넌트 기반으로 작동!!
> 각 조원들이 작업한 페이지를 컴포넌트화 연결

*공통점 :
여러개의 페이지가 불필요한 프로젝트

html, css => "a"

*Route = 라우트
- 경로
- 기원 : 네트워크 통신망
- SKT / KT / LGT
> 기지국을 통해서 먼거리에 있는 사람에게도 전화를 걸 수 있다!!!
> Routing = 어떤 네트워크 통신망 내에서 통신 데이터를 보낼 경로를 선택하는 일련의 과정을 통들어서 일컫는 단어!!!

*UI작업을 진행함에 있어서
- Page Routing

*기존 웹 페이지에서의 Page Routing 어떤 방법으로 이뤄졌을까?

*SSR : Server Side Rendering
*MPA : Multi Page Application
(*복수의 페이지를 가지고 운영되는 방식)
Client -> Server : index.html / sports.html / entertain.html

*CSR : Client Side Rendering
*SPA : Single Page Application
Todolist => html 1개
index.html 1개만 있으면 에뛰드 하우스 4개 페이지를 각각의 컴포넌트를 조합해서 만들어낼 수 있음

감정일기장!!!
=> 일기를 작성한 날짜
=> 일기 작성 내용
=> 오늘의 감정 (*기분좋음 / 우울함 / 짜증남)

그날 그날 작성한 일기 데이터를 목록화해서 볼 수 있어야함!!!

목록화 되어 있는 페이지에서는 일기를 삭제할 수 있는 기능

일기장 최신순으로 오래된순으로 필터링

세부적인 일기장 페이지 => 수정기능


1.일기장을 작성할 수 있는 페이지 => New.js
2.작성된 일기장을 읽을 수 있는 페이지 => Diary.js
3.작성된 여러개의 일기장을 한 눈에 볼 수 있는 목록화 되어진 페이지 => Home.js
4.작성된 일기장을 수정할 수 있는 페이지 => Edit.js

> 만약, 내가 작성한 일기가 30개!!!

3개의 페이지 필요함

*컴포넌트는 페이지를 구성하게끔 해주는 요소!!!
*함수 => 컴포넌트가 아닌, 컴포넌트 내에서 부분적으로 사용해야하는 함수기능!!!

npm i react-router-dom

Page Routing 기능 구현!!!
=> 메인이 되는 컴포넌트에서 일종의 스위치를 설치!!

동적 라우팅 구현!!!

1.index.js 
- 메인 컴포넌트에 페이지 라우팅 기능을 구현하고자 하는 컴포넌트를 찾어서 <BrowserRouter/> 설정

2.App.js
- <Routes /> & <Route /> => 페이지 분기 작업!!!
- <Route /> : path & element
- path : 경로 => 상단 주소창의 경로 정의
- element : 보여줄 컴포넌트 소스 정의

<switch>

https://www.musinsa.com/app/goods/1149329?loc=goods_rank
https://www.musinsa.com/app/goods/3771149?loc=goods_rank

Page Routing을 설정할 때, URL Parameter 정의할 수 있음!!!
기본적인 page url 뒤에 "/" 특정정보라는 것을 인식할 수 있는 일종의 변수값!!!

URL Parameter 값 뒤에 "?"와 함께 입력되어 지는 값을 Query String 이라고 부름!!!!
Query : 질의하다. 질문하다
String : 문자열

https://www.musinsa.com/search/musinsa/integration?q=%EB%B0%98%ED%8C%94

> vs code 폴더 / 파일 : 한글x

*파라미터를 사용할 때 : 
- 특정 섹션 및 카테고리 내 컨텐츠를 정리 및 보관하고자 할 때
- 신규로 일기를 작성!!! => /diary/10

useParams : 상단 주소창에서 파라미터의 값을 찾아올 때 사용하는 리액트 훅
useSearchParams : 상단 주소창에서 쿼리스트링의 값을 찾아올 때 사용하는 리액트 훅

https://www.musinsa.com/search/musinsa/integration?q=반팔
{
 q : 반팔
}
form action = "get"

*React.js
- useState
- useRef
- useEffect
- useMemo
- useContext
- useReducer

- useParams
- useSearchParams
> Route
> Routing
> page routing 기능 구현
> 동적 라우팅 생성
> mpa VS spa
> SSR VS CSR

*잡코리아 / 사람인
- F/E : RestFull API

*매일 아침 : react app
어제 / 그제 / 
> npm 설치했던 앱의 버전이 만약 변경사항!!!

*버튼을 상황에 맞춰서 사용!!!
1) 작성완료!
2) 취소하기!
3) 뒤로가기
> 색상 / 텍스트 / 기능
> props

html에서 1개의 태그에 복수의 class를 적용하고자 할 때?!!!

<button class="Button positive">

</div>







