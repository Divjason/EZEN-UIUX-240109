*개발 영역 정답x

1.Styled-Components : Theme Provider

2.Styled-Components + TS + React 

3.React Router + Styled-Components + TS + React

> 실전프로젝트 : 가상화폐 API 데이터 호출 => UI 출력!!!

npm i styled-components
npm i @types/styled-components

npm i react-router-dom
npm i @types/react-router-dom

*Browser Router 최신문법
RouterProvider
createBrowserRouter
<Outlet />

*존재하지 않는 컴포넌트 페이지를 클라이언트가 요청했을 때, 메세지 및 문구를 출력하는 기능 추가!!!

*기존 서비스를 제공하고 있는 페이지 => 만약, 해당 페이지에 문제 발생했을 때, 해당 페이지에 아무런 메세지 없이 마냥 기다리게 하지않고, 문제 발생!!! 메세지를 출력하는 기능 추가!!!

<Link /> VS useNavigate( )

<Link /> : 사용자가 직접 어떤 행위를 해서 특정 페이지로 이동시켜주고자 할 때 => to 속성을 활용해서 이동시키고자 하는 경로를 설정

useNavigate( ) : 사용자의 의도와 관계없이 개발자 혹은 마케터 혹은 기획자가 사용자를 어떤 페이지로 이끌고자 할 때
=> 버튼 클릭 후 이벤트 결과값으로 자동 이동!! => 리액트 훅 : 함수

outlet : 특정 컴포넌트 페이지에 도착을 했을 때, 이에 맞는 자식 컴포넌트 페이지가 존재하면, 해당 컴포넌트를 페이지를 보여주게 하는 역할

outlet : 페이지 라우팅 기능만 하는 것이 아니라, 데이터를 전달해주는 역할도 함!!!

API : 아무 제약조건 없이 가져다가 사용할 수 있다면!!!
> CORS : 통신프로토콜 규정 위반!!!
> 데이터를 전송 (*Server) : https
> 데이터를 수신 (*Client) : http

1) 프록시 서버 : fake 서버를 만들어 준것처럼!!!
=> 50:50

2) Node.js 서버구축 : 확실한 방법

4.react-query : 데이터 송수신에 대한 라이브러리

npm i react-query --force

*스타일 컴포넌트 => reset css는 어떻게 적용할까?